<start> ::= <jsonFilter> 
<start> ::= <limitToFilter> 
<start> ::= <orderByFilter> 
<start> ::= <comparator> 
<start> ::= <reverseComparator> 
<start> ::= <isPrimitive> 
<start> ::= <objectToString> 
<start> ::= <compare> 
<start> ::= <ngDirective> 
<start> ::= <ngBooleanAttrWatchAction> 
<start> ::= <ngAttrAliasWatchAction> 
<start> ::= <nullFormRenameControl> 
<start> ::= <FormController> 
<start> ::= <ngFormCompile> 
<start> ::= <ngFormPreLink> 
<start> ::= <stringBasedInputType> 
<start> ::= <textInputType> 
<start> ::= <baseInputType> 
<start> ::= <weekParser> 
<start> ::= <createDateParser> 
<start> ::= <createDateInputType> 
<start> ::= <dynamicDateInputType> 
<start> ::= <isValidDate> 
<start> ::= <parseObservedDateValue> 
<start> ::= <badInputChecker> 
<start> ::= <numberInputType> 
<start> ::= <urlInputType> 
<start> ::= <emailInputType> 
<start> ::= <radioInputType> 
<start> ::= <parseConstantExpr> 
<start> ::= <checkboxInputType> 
<start> ::= <ngValueConstantLink> 
<start> ::= <ngValueLink> 
<start> ::= <valueWatchAction> 
<start> ::= <ngBindCompile> 
<start> ::= <ngBindLink> 
<start> ::= <ngBindWatchAction> 
<start> ::= <ngBindTemplateCompile> 
<start> ::= <ngBindTemplateLink> 
<start> ::= <ngBindHtmlCompile> 
<start> ::= <getStringValue> 
<start> ::= <ngBindHtmlLink> 
<start> ::= <ngBindHtmlWatchAction> 
<start> ::= <classDirective> 
<start> ::= <addClasses> 
<start> ::= <removeClasses> 
<start> ::= <digestClassCounts> 
<start> ::= <updateClasses> 
<start> ::= <ngClassWatchAction> 
<start> ::= <arrayDifference> 
<start> ::= <arrayClasses> 
<start> ::= <ngEventHandler> 
<start> ::= <ngIfWatchAction> 
<start> ::= <ngIncludeWatchAction> 
<start> ::= <namespaceAdaptedClone> 
<start> ::= <processParseErrors> 
<start> ::= <processSyncValidators> 
<start> ::= <processAsyncValidators> 
<start> ::= <setValidity> 
<start> ::= <validationDone> 
<start> ::= <writeToModelIfNeeded> 
<start> ::= <ngModelWatch> 
<start> ::= <ngModelCompile> 
<start> ::= <ngModelPreLink> 
<start> ::= <ngModelPostLink> 
<start> ::= <addSetValidityMethod> 
<start> ::= <setValidity> 
<start> ::= <createAndSet> 
<start> ::= <unsetAndCleanup> 
<start> ::= <cachedToggleClass> 
<start> ::= <toggleValidationCss> 
<start> ::= <isObjectEmpty> 
<start> ::= <ngPluralizeWatchAction> 
<start> ::= <updateElementText> 
<start> ::= <ngRepeatCompile> 
<start> ::= <ngRepeatLink> 
<start> ::= <ngRepeatAction> 
<start> ::= <ngRepeatTransclude> 
<start> ::= <ngShowWatchAction> 
<start> ::= <ngHideWatchAction> 
<start> ::= <ngStyleWatchAction> 
<start> ::= <ngSwitchController> 
<start> ::= <ngSwitchWatchAction> 
<start> ::= <setupAsSingle> 
<start> ::= <setupAsMultiple> 
<start> ::= <selectMultipleWatch> 
<start> ::= <setupAsOptions> 
<start> ::= <callExpression> 
<start> ::= <selectionChanged> 
<start> ::= <getViewValue> 
<start> ::= <getLabels> 
<start> ::= <createIsSelectedFn> 
<start> ::= <isSelected> 
<start> ::= <scheduleRendering> 
<start> ::= <updateLabelMap> 
<start> ::= <render> 
<start> ::= <interpolateWatchAction> 
<orderByFilter> ::= (orderByFilter ($parse) )
<comparator> ::= (comparator (o1) (o2) )
<reverseComparator> ::= (reverseComparator (comp) (descending) )
<isPrimitive> ::= (isPrimitive (value) )
<objectToString> ::= (objectToString (value) )
<compare> ::= (compare (v1) (v2) )
<ngDirective> ::= (ngDirective (directive) )
<ngBooleanAttrWatchAction> ::= (ngBooleanAttrWatchAction (value) )
<ngAttrAliasWatchAction> ::= (ngAttrAliasWatchAction (value) )
<nullFormRenameControl> ::= (nullFormRenameControl (control) (name) )
<FormController> ::= (FormController (element) (attrs) ($scope) ($animate) ($interpolate) )
<ngFormCompile> ::= (ngFormCompile (formElement) )
<ngFormPreLink> ::= (ngFormPreLink (scope) (formElement) (attr) (controller) )
<stringBasedInputType> ::= (stringBasedInputType (ctrl) )
<textInputType> ::= (textInputType (scope) (element) (attr) (ctrl) ($sniffer) ($browser) )
<baseInputType> ::= (baseInputType (scope) (element) (attr) (ctrl) ($sniffer) ($browser) )
<weekParser> ::= (weekParser (isoWeek) (existingDate) )
<createDateParser> ::= (createDateParser (regexp) (mapping) )
<createDateInputType> ::= (createDateInputType (type) (regexp) (parseDate) (format) )
<dynamicDateInputType> ::= (dynamicDateInputType (scope) (element) (attr) (ctrl) ($sniffer) ($browser) ($filter) )
<isValidDate> ::= (isValidDate (value) )
<parseObservedDateValue> ::= (parseObservedDateValue (val) )
<badInputChecker> ::= (badInputChecker (scope) (element) (attr) (ctrl) )
<numberInputType> ::= (numberInputType (scope) (element) (attr) (ctrl) ($sniffer) ($browser) )
<urlInputType> ::= (urlInputType (scope) (element) (attr) (ctrl) ($sniffer) ($browser) )
<emailInputType> ::= (emailInputType (scope) (element) (attr) (ctrl) ($sniffer) ($browser) )
<radioInputType> ::= (radioInputType (scope) (element) (attr) (ctrl) )
<parseConstantExpr> ::= (parseConstantExpr ($parse) (context) (name) (expression) (fallback) )
<checkboxInputType> ::= (checkboxInputType (scope) (element) (attr) (ctrl) ($sniffer) ($browser) ($filter) ($parse) )
<ngValueConstantLink> ::= (ngValueConstantLink (scope) (elm) (attr) )
<ngValueLink> ::= (ngValueLink (scope) (elm) (attr) )
<valueWatchAction> ::= (valueWatchAction (value) )
<ngBindCompile> ::= (ngBindCompile (templateElement) )
<ngBindLink> ::= (ngBindLink (scope) (element) (attr) )
<ngBindWatchAction> ::= (ngBindWatchAction (value) )
<ngBindTemplateCompile> ::= (ngBindTemplateCompile (templateElement) )
<ngBindTemplateLink> ::= (ngBindTemplateLink (scope) (element) (attr) )
<ngBindHtmlCompile> ::= (ngBindHtmlCompile (tElement) (tAttrs) )
<getStringValue> ::= (getStringValue (value) )
<ngBindHtmlLink> ::= (ngBindHtmlLink (scope) (element) (attr) )
<classDirective> ::= (classDirective (name) (selector) )
<addClasses> ::= (addClasses (classes) )
<removeClasses> ::= (removeClasses (classes) )
<digestClassCounts> ::= (digestClassCounts (classes) (count) )
<updateClasses> ::= (updateClasses (oldClasses) (newClasses) )
<ngClassWatchAction> ::= (ngClassWatchAction (newVal) )
<arrayDifference> ::= (arrayDifference (tokens1) (tokens2) )
<arrayClasses> ::= (arrayClasses (classVal) )
<ngEventHandler> ::= (ngEventHandler (scope) (element) )
<ngIfWatchAction> ::= (ngIfWatchAction (value) )
<ngIncludeWatchAction> ::= (ngIncludeWatchAction (src) )
<namespaceAdaptedClone> ::= (namespaceAdaptedClone (clone) )
<processParseErrors> ::= (processParseErrors (parseValid) )
<setValidity> ::= (setValidity (name) (isValid) )
<validationDone> ::= (validationDone (allValid) )
<ngModelCompile> ::= (ngModelCompile (element) )
<ngModelPreLink> ::= (ngModelPreLink (scope) (element) (attr) (ctrls) )
<ngModelPostLink> ::= (ngModelPostLink (scope) (element) (attr) (ctrls) )
<addSetValidityMethod> ::= (addSetValidityMethod (context) )
<setValidity> ::= (setValidity (validationErrorKey) (state) (options) )
<createAndSet> ::= (createAndSet (name) (value) (options) )
<unsetAndCleanup> ::= (unsetAndCleanup (name) (value) (options) )
<cachedToggleClass> ::= (cachedToggleClass (className) (switchValue) )
<toggleValidationCss> ::= (toggleValidationCss (validationErrorKey) (isValid) )
<isObjectEmpty> ::= (isObjectEmpty (obj) )
<ngPluralizeWatchAction> ::= (ngPluralizeWatchAction (newVal) )
<updateElementText> ::= (updateElementText (newText) )
<ngRepeatCompile> ::= (ngRepeatCompile ($element) ($attr) )
<ngRepeatLink> ::= (ngRepeatLink ($scope) ($element) ($attr) (ctrl) ($transclude) )
<ngRepeatAction> ::= (ngRepeatAction (collection) )
<ngRepeatTransclude> ::= (ngRepeatTransclude (clone) (scope) )
<ngShowWatchAction> ::= (ngShowWatchAction (value) )
<ngHideWatchAction> ::= (ngHideWatchAction (value) )
<ngStyleWatchAction> ::= (ngStyleWatchAction (newStyles) (oldStyles) )
<ngSwitchWatchAction> ::= (ngSwitchWatchAction (value) )
<setupAsSingle> ::= (setupAsSingle (scope) (selectElement) (ngModelCtrl) (selectCtrl) )
<setupAsMultiple> ::= (setupAsMultiple (scope) (selectElement) (ctrl) )
<setupAsOptions> ::= (setupAsOptions (scope) (selectElement) (ctrl) )
<callExpression> ::= (callExpression (exprFn) (key) (value) )
<getViewValue> ::= (getViewValue (key) (value) )
<createIsSelectedFn> ::= (createIsSelectedFn (viewValue) )
<isSelected> ::= (isSelected (key) (value) )
<updateLabelMap> ::= (updateLabelMap (labelMap) (label) (added) )
<interpolateWatchAction> ::= (interpolateWatchAction (newVal) (oldVal) )
